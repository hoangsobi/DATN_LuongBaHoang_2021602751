// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Prj_Ban_Quan_Ao.Models;

#nullable disable

namespace Prj_Ban_Quan_Ao.Migrations
{
    [DbContext(typeof(DbQuanAoContext))]
    partial class DbQuanAoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Prj_Ban_Quan_Ao.Models.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("DuongDanAnh")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("duongDanAnh");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<bool?>("GioiTinh")
                        .HasColumnType("bit")
                        .HasColumnName("gioiTinh");

                    b.Property<string>("MatKhau")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("matKhau");

                    b.Property<DateOnly?>("NgaySinh")
                        .HasColumnType("date")
                        .HasColumnName("ngaySinh");

                    b.Property<DateTime?>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("SoDienThoai")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("soDienThoai");

                    b.Property<string>("TenDangNhap")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("tenDangNhap");

                    b.Property<string>("TenHienThi")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("tenHienThi");

                    b.Property<bool?>("VaiTro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("vaiTro");

                    b.HasKey("Id")
                        .HasName("PK__Account__3213E83F29E21319");

                    b.ToTable("Account", null, t =>
                        {
                            t.HasTrigger("trg_InsertAccount_GioHang");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("Prj_Ban_Quan_Ao.Models.AccountMaGiamGium", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid?>("AccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Account_id");

                    b.Property<Guid?>("MagiamgiaId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Magiamgia_id");

                    b.HasKey("Id")
                        .HasName("PK__Account___3213E83F129DEC7B");

                    b.HasIndex("AccountId");

                    b.HasIndex("MagiamgiaId");

                    b.ToTable("Account_MaGiamGia", null, t =>
                        {
                            t.HasTrigger("trg_magiamgia");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("Prj_Ban_Quan_Ao.Models.AnhDanhGium", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid?>("DanhGiaId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DanhGia_id");

                    b.Property<string>("DuongDan")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("duongDan");

                    b.Property<DateTime?>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id")
                        .HasName("PK__AnhDanhG__3213E83F0936EDFE");

                    b.HasIndex("DanhGiaId");

                    b.ToTable("AnhDanhGia");
                });

            modelBuilder.Entity("Prj_Ban_Quan_Ao.Models.AnhSanPham", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("DuongDan")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("duongDan");

                    b.Property<DateTime?>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("SanPhamId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SanPham_id");

                    b.HasKey("Id")
                        .HasName("PK__AnhSanPh__3213E83F3AC1BB1B");

                    b.HasIndex("SanPhamId");

                    b.ToTable("AnhSanPham", (string)null);
                });

            modelBuilder.Entity("Prj_Ban_Quan_Ao.Models.BaiViet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("noiDung");

                    b.HasKey("Id")
                        .HasName("PK__BaiViet__3213E83F2DB3782D");

                    b.ToTable("BaiViet", (string)null);
                });

            modelBuilder.Entity("Prj_Ban_Quan_Ao.Models.ChatBox", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid?>("AccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Account_id");

                    b.Property<Guid?>("AdminId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Admin_id");

                    b.Property<DateTime?>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("NguoiGuiId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("nguoiGui_id");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("noiDung");

                    b.HasKey("Id")
                        .HasName("PK__ChatBox__3213E83F3911B4B1");

                    b.ToTable("ChatBox", (string)null);
                });

            modelBuilder.Entity("Prj_Ban_Quan_Ao.Models.DanhGium", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid?>("AccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Account_id");

                    b.Property<Guid?>("DonHangId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DonHang_id");

                    b.Property<double?>("KichCo")
                        .HasColumnType("float")
                        .HasColumnName("kichCo");

                    b.Property<int?>("Mau")
                        .HasColumnType("int")
                        .HasColumnName("mau")
                        .HasComment("1.đỏ, 2. cam, 3. vàng, 4. xanh lục, 5. xanh dương, 6. tím, 7.đen, 8. trắng");

                    b.Property<DateTime?>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("noiDung");

                    b.Property<Guid?>("SanPhamId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SanPham_id");

                    b.Property<double?>("Vote")
                        .HasColumnType("float")
                        .HasColumnName("vote");

                    b.HasKey("Id")
                        .HasName("PK__DanhGia__3213E83F6069BE80");

                    b.HasIndex("AccountId");

                    b.HasIndex("SanPhamId");

                    b.ToTable("DanhGia", t =>
                        {
                            t.HasTrigger("trg_DeleteDanhGia");

                            t.HasTrigger("trg_InsertDanhGia");

                            t.HasTrigger("trg_UpdateDanhGia");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("Prj_Ban_Quan_Ao.Models.DiaChi", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid?>("AccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Account_id");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ghiChu");

                    b.Property<string>("Huyen")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("huyen");

                    b.Property<DateTime?>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Tinh")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("tinh");

                    b.Property<string>("Xa")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("xa");

                    b.HasKey("Id")
                        .HasName("PK__DiaChi__3213E83FFCBD13B5");

                    b.HasIndex("AccountId");

                    b.ToTable("DiaChi", (string)null);
                });

            modelBuilder.Entity("Prj_Ban_Quan_Ao.Models.DonHang", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid?>("AccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Account_id");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("diaChi");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ghiChu");

                    b.Property<Guid?>("MaGiamGiaId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("MaGiamGia_id");

                    b.Property<DateTime?>("NgayHuy")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayHuy");

                    b.Property<DateTime?>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("PhuongThucThanhToan")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("phuongThucThanhToan");

                    b.Property<string>("PhuongThucVanChuyen")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("phuongThucVanChuyen");

                    b.Property<double?>("ThanhTien")
                        .HasColumnType("float")
                        .HasColumnName("thanhTien");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("trangThai")
                        .HasComment("Chờ xác nhận đơn hàng, Đang chuẩn bị hàng, Đang giao hàng, Giao hàng thành công, Đã hủy");

                    b.HasKey("Id")
                        .HasName("PK__DonHang__3213E83F9B700232");

                    b.HasIndex("AccountId");

                    b.ToTable("DonHang", (string)null);
                });

            modelBuilder.Entity("Prj_Ban_Quan_Ao.Models.GioHang", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("TongSoLuong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("tongSoLuong");

                    b.HasKey("Id")
                        .HasName("PK__GioHang__3213E83FC552FA08");

                    b.ToTable("GioHang", (string)null);
                });

            modelBuilder.Entity("Prj_Ban_Quan_Ao.Models.GopY", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("HoTen")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("hoTen");

                    b.Property<DateTime?>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("noiDung");

                    b.Property<string>("SoDienThoai")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("soDienThoai");

                    b.HasKey("Id")
                        .HasName("PK__GopY__3213E83F8D93A4D8");

                    b.ToTable("GopY", (string)null);
                });

            modelBuilder.Entity("Prj_Ban_Quan_Ao.Models.LoaiSanPham", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("moTa");

                    b.Property<DateTime?>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("TenLoai")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("tenLoai");

                    b.HasKey("Id")
                        .HasName("PK__LoaiSanP__3213E83FE10F5703");

                    b.ToTable("LoaiSanPham", (string)null);
                });

            modelBuilder.Entity("Prj_Ban_Quan_Ao.Models.MaGiamGium", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<double?>("LuongGiam")
                        .HasColumnType("float")
                        .HasColumnName("luongGiam")
                        .HasComment("theo phần trăm");

                    b.Property<string>("Ma")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("moTa");

                    b.Property<DateOnly?>("NgayHetHan")
                        .HasColumnType("date")
                        .HasColumnName("ngayHetHan");

                    b.Property<DateTime?>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("SoLuong")
                        .HasColumnType("int")
                        .HasColumnName("soLuong");

                    b.HasKey("Id")
                        .HasName("PK__MaGiamGi__3213E83FD86A52CC");

                    b.ToTable("MaGiamGia");
                });

            modelBuilder.Entity("Prj_Ban_Quan_Ao.Models.SanPham", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("ChatLieu")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("chatLieu");

                    b.Property<double?>("DanhGia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0)
                        .HasColumnName("danhGia")
                        .HasComment("đánh giá trung bình, không cho sửa");

                    b.Property<string>("DuongDanAnh")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("duongDanAnh");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ghiChu");

                    b.Property<double?>("Gia")
                        .HasColumnType("float")
                        .HasColumnName("gia");

                    b.Property<double?>("GiaSauGiam")
                        .HasColumnType("float")
                        .HasColumnName("giaSauGiam");

                    b.Property<Guid?>("LoaiSanPhamId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LoaiSanPham_id");

                    b.Property<string>("MaSanPham")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("maSanPham");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("moTa");

                    b.Property<DateTime?>("NgayCapNhat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ngayCapNhat")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("SoLuong")
                        .HasColumnType("int")
                        .HasColumnName("soLuong");

                    b.Property<string>("Ten")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ten");

                    b.HasKey("Id")
                        .HasName("PK__SanPham__3213E83F1C164B26");

                    b.HasIndex("LoaiSanPhamId");

                    b.HasIndex(new[] { "MaSanPham" }, "UQ__SanPham__5B439C42849C83D7")
                        .IsUnique();

                    b.ToTable("SanPham", (string)null);
                });

            modelBuilder.Entity("Prj_Ban_Quan_Ao.Models.SanPhamDonHang", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid?>("DonHangId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DonHang_id");

                    b.Property<double?>("KichCo")
                        .HasColumnType("float")
                        .HasColumnName("kichCo");

                    b.Property<int?>("Mau")
                        .HasColumnType("int")
                        .HasColumnName("mau")
                        .HasComment("1.đỏ, 2. cam, 3. vàng, 4. xanh lục, 5. xanh dương, 6. tím, 7.đen, 8. trắng");

                    b.Property<DateTime?>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("SanPhamId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SanPham_id");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int")
                        .HasColumnName("soLuong");

                    b.HasKey("Id")
                        .HasName("PK__SanPham___3213E83F580DD465");

                    b.HasIndex("DonHangId");

                    b.HasIndex(new[] { "SanPhamId", "DonHangId", "KichCo", "Mau" }, "uq_sanpham_donhang")
                        .IsUnique()
                        .HasFilter("[SanPham_id] IS NOT NULL AND [DonHang_id] IS NOT NULL AND [kichCo] IS NOT NULL AND [mau] IS NOT NULL");

                    b.ToTable("SanPham_DonHang", null, t =>
                        {
                            t.HasTrigger("trg_AfterDeleteSanPhamDonHang");

                            t.HasTrigger("trg_AfterInsertSanPhamDonHang");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("Prj_Ban_Quan_Ao.Models.SanPhamGioHang", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid?>("GioHangId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GioHang_id");

                    b.Property<double?>("KichCo")
                        .HasColumnType("float")
                        .HasColumnName("kichCo");

                    b.Property<int?>("Mau")
                        .HasColumnType("int")
                        .HasColumnName("mau")
                        .HasComment("1.đỏ, 2. cam, 3. vàng, 4. xanh lục, 5. xanh dương, 6. tím, 7.đen, 8. trắng");

                    b.Property<DateTime?>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("SanPhamId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SanPham_id");

                    b.Property<int?>("SoLuong")
                        .HasColumnType("int")
                        .HasColumnName("soLuong");

                    b.HasKey("Id")
                        .HasName("PK__SanPham___3213E83FF7CD71A5");

                    b.HasIndex("GioHangId");

                    b.HasIndex("SanPhamId");

                    b.ToTable("SanPham_GioHang", null, t =>
                        {
                            t.HasTrigger("trg_HuyGioHang");

                            t.HasTrigger("trg_InsertGioHang");

                            t.HasTrigger("trg_UpdateSoLuongSanPhamGioHang");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("Prj_Ban_Quan_Ao.Models.SanPhamKichCo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<double?>("KichCo")
                        .HasColumnType("float")
                        .HasColumnName("kichCo");

                    b.Property<int?>("Mau")
                        .HasColumnType("int")
                        .HasColumnName("mau");

                    b.Property<DateTime?>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("SanPhamId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SanPham_id");

                    b.Property<int?>("SoLuong")
                        .HasColumnType("int")
                        .HasColumnName("soLuong");

                    b.HasKey("Id")
                        .HasName("PK__SanPham___3213E83F67FADB66");

                    b.HasIndex(new[] { "SanPhamId", "KichCo" }, "UC_SanphamKichco")
                        .IsUnique()
                        .HasFilter("[SanPham_id] IS NOT NULL AND [kichCo] IS NOT NULL");

                    b.HasIndex(new[] { "SanPhamId", "KichCo", "Mau" }, "uq_sanpham_kichCo")
                        .IsUnique()
                        .HasFilter("[SanPham_id] IS NOT NULL AND [kichCo] IS NOT NULL AND [mau] IS NOT NULL");

                    b.ToTable("SanPham_KichCo", null, t =>
                        {
                            t.HasTrigger("trg_DeleteSanPhamKichCo");

                            t.HasTrigger("trg_InsertSanPhamKichCo");

                            t.HasTrigger("trg_UpdateSanPhamKichCo");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("Prj_Ban_Quan_Ao.Models.YeuThich", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid?>("AccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Account_id");

                    b.Property<DateTime?>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("SanPhamId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SanPham_id");

                    b.HasKey("Id")
                        .HasName("PK__YeuThich__3213E83F3A3C3081");

                    b.HasIndex("SanPhamId");

                    b.HasIndex(new[] { "AccountId", "SanPhamId" }, "UQ_accountId_sanphamid")
                        .IsUnique()
                        .HasFilter("[Account_id] IS NOT NULL AND [SanPham_id] IS NOT NULL");

                    b.ToTable("YeuThich", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Prj_Ban_Quan_Ao.Models.AccountMaGiamGium", b =>
                {
                    b.HasOne("Prj_Ban_Quan_Ao.Models.Account", "Account")
                        .WithMany("AccountMaGiamGia")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_Account_MaGiamGia_MaGiamGia_id");

                    b.HasOne("Prj_Ban_Quan_Ao.Models.MaGiamGium", "Magiamgia")
                        .WithMany("AccountMaGiamGia")
                        .HasForeignKey("MagiamgiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_Account_MaGiamGia_Account_id");

                    b.Navigation("Account");

                    b.Navigation("Magiamgia");
                });

            modelBuilder.Entity("Prj_Ban_Quan_Ao.Models.AnhDanhGium", b =>
                {
                    b.HasOne("Prj_Ban_Quan_Ao.Models.DanhGium", "DanhGia")
                        .WithMany("AnhDanhGia")
                        .HasForeignKey("DanhGiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_AnhDanhGia_DanhGia_id");

                    b.Navigation("DanhGia");
                });

            modelBuilder.Entity("Prj_Ban_Quan_Ao.Models.AnhSanPham", b =>
                {
                    b.HasOne("Prj_Ban_Quan_Ao.Models.SanPham", "SanPham")
                        .WithMany("AnhSanPhams")
                        .HasForeignKey("SanPhamId")
                        .HasConstraintName("fk_AnhSanPham_SanPham_id");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("Prj_Ban_Quan_Ao.Models.DanhGium", b =>
                {
                    b.HasOne("Prj_Ban_Quan_Ao.Models.Account", "Account")
                        .WithMany("DanhGia")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_DanhGia_Account_id");

                    b.HasOne("Prj_Ban_Quan_Ao.Models.SanPham", "SanPham")
                        .WithMany("DanhGiaNavigation")
                        .HasForeignKey("SanPhamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_SanPham_DanhGia_id");

                    b.Navigation("Account");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("Prj_Ban_Quan_Ao.Models.DiaChi", b =>
                {
                    b.HasOne("Prj_Ban_Quan_Ao.Models.Account", "Account")
                        .WithMany("DiaChis")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_DiaChi_Account_id");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Prj_Ban_Quan_Ao.Models.DonHang", b =>
                {
                    b.HasOne("Prj_Ban_Quan_Ao.Models.Account", "Account")
                        .WithMany("DonHangs")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_DonHang_Account_id");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Prj_Ban_Quan_Ao.Models.GioHang", b =>
                {
                    b.HasOne("Prj_Ban_Quan_Ao.Models.Account", "IdNavigation")
                        .WithOne("GioHang")
                        .HasForeignKey("Prj_Ban_Quan_Ao.Models.GioHang", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_GioHang_id");

                    b.Navigation("IdNavigation");
                });

            modelBuilder.Entity("Prj_Ban_Quan_Ao.Models.SanPham", b =>
                {
                    b.HasOne("Prj_Ban_Quan_Ao.Models.LoaiSanPham", "LoaiSanPham")
                        .WithMany("SanPhams")
                        .HasForeignKey("LoaiSanPhamId")
                        .HasConstraintName("fk_SanPham_LoaiSanPham_id");

                    b.Navigation("LoaiSanPham");
                });

            modelBuilder.Entity("Prj_Ban_Quan_Ao.Models.SanPhamDonHang", b =>
                {
                    b.HasOne("Prj_Ban_Quan_Ao.Models.DonHang", "DonHang")
                        .WithMany("SanPhamDonHangs")
                        .HasForeignKey("DonHangId")
                        .HasConstraintName("fk_SanPham_DonHang_DonHang_id");

                    b.HasOne("Prj_Ban_Quan_Ao.Models.SanPham", "SanPham")
                        .WithMany("SanPhamDonHangs")
                        .HasForeignKey("SanPhamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_SanPham_DonHang_SanPham_id");

                    b.Navigation("DonHang");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("Prj_Ban_Quan_Ao.Models.SanPhamGioHang", b =>
                {
                    b.HasOne("Prj_Ban_Quan_Ao.Models.GioHang", "GioHang")
                        .WithMany("SanPhamGioHangs")
                        .HasForeignKey("GioHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_SanPham_GioHang_GioHang_id");

                    b.HasOne("Prj_Ban_Quan_Ao.Models.SanPham", "SanPham")
                        .WithMany("SanPhamGioHangs")
                        .HasForeignKey("SanPhamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_SanPham_GioHang_SanPham_id");

                    b.Navigation("GioHang");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("Prj_Ban_Quan_Ao.Models.SanPhamKichCo", b =>
                {
                    b.HasOne("Prj_Ban_Quan_Ao.Models.SanPham", "SanPham")
                        .WithMany("SanPhamKichCos")
                        .HasForeignKey("SanPhamId")
                        .HasConstraintName("fk_SanPham_KichCo_SanPham_id");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("Prj_Ban_Quan_Ao.Models.YeuThich", b =>
                {
                    b.HasOne("Prj_Ban_Quan_Ao.Models.Account", "Account")
                        .WithMany("YeuThiches")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_YeuThich_Account_id");

                    b.HasOne("Prj_Ban_Quan_Ao.Models.SanPham", "SanPham")
                        .WithMany("YeuThiches")
                        .HasForeignKey("SanPhamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_YeuThich_SanPham_id");

                    b.Navigation("Account");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("Prj_Ban_Quan_Ao.Models.Account", b =>
                {
                    b.Navigation("AccountMaGiamGia");

                    b.Navigation("DanhGia");

                    b.Navigation("DiaChis");

                    b.Navigation("DonHangs");

                    b.Navigation("GioHang");

                    b.Navigation("YeuThiches");
                });

            modelBuilder.Entity("Prj_Ban_Quan_Ao.Models.DanhGium", b =>
                {
                    b.Navigation("AnhDanhGia");
                });

            modelBuilder.Entity("Prj_Ban_Quan_Ao.Models.DonHang", b =>
                {
                    b.Navigation("SanPhamDonHangs");
                });

            modelBuilder.Entity("Prj_Ban_Quan_Ao.Models.GioHang", b =>
                {
                    b.Navigation("SanPhamGioHangs");
                });

            modelBuilder.Entity("Prj_Ban_Quan_Ao.Models.LoaiSanPham", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("Prj_Ban_Quan_Ao.Models.MaGiamGium", b =>
                {
                    b.Navigation("AccountMaGiamGia");
                });

            modelBuilder.Entity("Prj_Ban_Quan_Ao.Models.SanPham", b =>
                {
                    b.Navigation("AnhSanPhams");

                    b.Navigation("DanhGiaNavigation");

                    b.Navigation("SanPhamDonHangs");

                    b.Navigation("SanPhamGioHangs");

                    b.Navigation("SanPhamKichCos");

                    b.Navigation("YeuThiches");
                });
#pragma warning restore 612, 618
        }
    }
}
